@startuml UML_SequenceDiagram

skinparam sequence {
    ActorBackgroundColor LightGreen
    ParticipantBackgroundColor LightYellow
    LifeLineBorderColor Black
    LifeLineBackgroundColor LightGray
    ArrowColor Navy
}

actor "User" as User
participant "Controller" as Ctrl
participant "Sensor" as Sen
participant "Actuator" as Act

User -> Ctrl : initiateProcess()
activate Ctrl
Ctrl -> Sen : getData()
activate Sen
Sen --> Ctrl : return data
deactivate Sen
Ctrl -> Act : setOutput(data)
activate Act
Act --> Ctrl : acknowledge
deactivate Act
deactivate Ctrl
User --> Ctrl : process complete

@enduml
note right of Logger : Creates timestamped entry

Logger --> Controller : success
deactivate Logger

Controller -> Sensor2 : SensorClass_getData()
activate Sensor2

Sensor2 -> Env : <<hardware read>>
Env --> Sensor2 : rawValue

Sensor2 -> Sensor2 : validateReading(rawValue)

alt value is valid
    Sensor2 --> Controller : sensorValue2
    Controller -> Logger : logData(sensor2)
    activate Logger
    Logger --> Controller : success
    deactivate Logger
else value is invalid
    Sensor2 --> Controller : errorCode
    note right of Controller : Error handling logic
    Controller -> Controller : handleSensorError(sensor2)
end

Controller -> Controller : checkAlerts()
note right of Controller : Check if any readings\nexceed alert thresholds

opt alert condition met
    Controller -> User : <<alert notification>>
end

Controller --> User : operationComplete
deactivate Controller

note over User, Env : Condition Mark: All sensors read successfully\nController state: MONITORING

@enduml
