@startuml PollingPattern_SequenceDiagram

skinparam sequence {
    ActorBackgroundColor LightGreen
    ParticipantBackgroundColor LightYellow
    LifeLineBorderColor Black
    LifeLineBackgroundColor LightGray
    ArrowColor Navy
}

actor Application
participant "BCPeriodicPoller" as Poller
participant "BCTimer" as Timer
participant "BreathingCircuitSensor[0]" as Sensor0
participant "BreathingCircuitSensor[1]" as Sensor1
participant "BreathingCircuitSensor[2]" as Sensor2
participant "MedicalDisplay" as Display

Application -> Poller : Create instance
Application -> Poller : startPolling()
activate Poller
Timer -> Poller : Timeout -> poll()
activate Poller
Poller -> Sensor0 : getData()
Poller -> Display : showO2Concentration(data)
Poller -> Sensor1 : getData()
Poller -> Sensor1 : getState()
Poller -> Display : showGasFlow(data)
Poller -> Display : showGasFlowStatus(state)
Poller -> Sensor2 : getData()
Poller -> Display : showCircuitPressure(data)
deactivate Poller
Timer <-- Poller : reset timer
...repeat polling cycle...
Application -> Poller : stopPolling()
deactivate Timer

@enduml